{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8492e502d18abc3366c30ee08404e9bacb1953137297c9d1e72f7055e32b87c0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "855171",
    "logsBloom": "0x
    "blockHash": "0xe119bf38a3a38694cf903d6585aea9f368f7f1e84c50a1de7dd09180939551f3",
    "transactionHash": "0x8492e502d18abc3366c30ee08404e9bacb1953137297c9d1e72f7055e32b87c0",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "855171",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "1109aeb8c75358417283c1c003879417",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\n//constant and immutable\\ncontract FundMe {\\n\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough...\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex = funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send failed\\\");\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == i_owner, \\\"You aren't the owner...\\\");\\n        if(msg.sender != i_owner) {revert NotOwner(); }\\n        _;\\n    }\\n\\n    // What happens if someone sends this contract ETH without calling the fund call\\n\\n    // receive()\\n    // fallback()\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0x6ff843da5413309066d81c198fa1e22fd93a4c52af06f2d53b556876dcb19db0\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n  function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n    // Price of ETH in USD\\r\\n    return uint256(price * 1e10);\\r\\n  }\\r\\n\\r\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    uint256 ethPrice = getPrice(priceFeed);\\r\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n    return ethAmountInUsd;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x500ba77e67c5c99491ba4f7ea5471ba38c8925dfee3ce499e52dee932ff019cf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f7c380380610f7c83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e17610165600039600081816102d3015261055e0152610e176000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a5565b610512565b6040516100d891906107eb565b60405180910390f35b3480156100ed57600080fd5b506100f661052a565b60405161010391906107eb565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610865565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b604051610163919061088f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d6565b610580565b6040516101a0919061088f565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037b5761037a610980565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f9906109de565b91509050610359565b50600067ffffffffffffffff81111561041e5761041d610a27565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506000908051906020019061046292919061069b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a87565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ae8565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610b08565b6105ee9190610b91565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610c4f565b5050509150506402540be400816106939190610cca565b915050919050565b828054828255906000526020600020908101928215610714579160200282015b828111156107135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bb565b5b5090506107219190610725565b5090565b5b8082111561073e576000816000905550600101610726565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077282610747565b9050919050565b61078281610767565b811461078d57600080fd5b50565b60008135905061079f81610779565b92915050565b6000602082840312156107bb576107ba610742565b5b60006107c984828501610790565b91505092915050565b6000819050919050565b6107e5816107d2565b82525050565b600060208201905061080060008301846107dc565b92915050565b6000819050919050565b600061082b61082661082184610747565b610806565b610747565b9050919050565b600061083d82610810565b9050919050565b600061084f82610832565b9050919050565b61085f81610844565b82525050565b600060208201905061087a6000830184610856565b92915050565b61088981610767565b82525050565b60006020820190506108a46000830184610880565b92915050565b6108b3816107d2565b81146108be57600080fd5b50565b6000813590506108d0816108aa565b92915050565b6000602082840312156108ec576108eb610742565b5b60006108fa848285016108c1565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682e2e2e0000000000000000000000600082015250565b600061094a601583610903565b915061095582610914565b602082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e9826107d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1c57610a1b6109af565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a71600083610a56565b9150610a7c82610a61565b600082019050919050565b6000610a9282610a64565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad2600b83610903565b9150610add82610a9c565b602082019050919050565b60006020820190508181036000830152610b0181610ac5565b9050919050565b6000610b13826107d2565b9150610b1e836107d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5757610b566109af565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9c826107d2565b9150610ba7836107d2565b925082610bb757610bb6610b62565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be181610bc2565b8114610bec57600080fd5b50565b600081519050610bfe81610bd8565b92915050565b6000819050919050565b610c1781610c04565b8114610c2257600080fd5b50565b600081519050610c3481610c0e565b92915050565b600081519050610c49816108aa565b92915050565b600080600080600060a08688031215610c6b57610c6a610742565b5b6000610c7988828901610bef565b9550506020610c8a88828901610c25565b9450506040610c9b88828901610c3a565b9350506060610cac88828901610c3a565b9250506080610cbd88828901610bef565b9150509295509295909350565b6000610cd582610c04565b9150610ce083610c04565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1f57610d1e6109af565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5c57610d5b6109af565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9957610d986109af565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd657610dd56109af565b5b82820290509291505056fea26469706673582212208b2ea9a171c5aad150f40238a9a2ca2e2ac78c41bc65484efa7ee79b6ef8794864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a5565b610512565b6040516100d891906107eb565b60405180910390f35b3480156100ed57600080fd5b506100f661052a565b60405161010391906107eb565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610865565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b604051610163919061088f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d6565b610580565b6040516101a0919061088f565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037b5761037a610980565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f9906109de565b91509050610359565b50600067ffffffffffffffff81111561041e5761041d610a27565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506000908051906020019061046292919061069b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a87565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ae8565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610b08565b6105ee9190610b91565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610c4f565b5050509150506402540be400816106939190610cca565b915050919050565b828054828255906000526020600020908101928215610714579160200282015b828111156107135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bb565b5b5090506107219190610725565b5090565b5b8082111561073e576000816000905550600101610726565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077282610747565b9050919050565b61078281610767565b811461078d57600080fd5b50565b60008135905061079f81610779565b92915050565b6000602082840312156107bb576107ba610742565b5b60006107c984828501610790565b91505092915050565b6000819050919050565b6107e5816107d2565b82525050565b600060208201905061080060008301846107dc565b92915050565b6000819050919050565b600061082b61082661082184610747565b610806565b610747565b9050919050565b600061083d82610810565b9050919050565b600061084f82610832565b9050919050565b61085f81610844565b82525050565b600060208201905061087a6000830184610856565b92915050565b61088981610767565b82525050565b60006020820190506108a46000830184610880565b92915050565b6108b3816107d2565b81146108be57600080fd5b50565b6000813590506108d0816108aa565b92915050565b6000602082840312156108ec576108eb610742565b5b60006108fa848285016108c1565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682e2e2e0000000000000000000000600082015250565b600061094a601583610903565b915061095582610914565b602082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e9826107d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1c57610a1b6109af565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a71600083610a56565b9150610a7c82610a61565b600082019050919050565b6000610a9282610a64565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad2600b83610903565b9150610add82610a9c565b602082019050919050565b60006020820190508181036000830152610b0181610ac5565b9050919050565b6000610b13826107d2565b9150610b1e836107d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5757610b566109af565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9c826107d2565b9150610ba7836107d2565b925082610bb757610bb6610b62565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be181610bc2565b8114610bec57600080fd5b50565b600081519050610bfe81610bd8565b92915050565b6000819050919050565b610c1781610c04565b8114610c2257600080fd5b50565b600081519050610c3481610c0e565b92915050565b600081519050610c49816108aa565b92915050565b600080600080600060a08688031215610c6b57610c6a610742565b5b6000610c7988828901610bef565b9550506020610c8a88828901610c25565b9450506040610c9b88828901610c3a565b9350506060610cac88828901610c3a565b9250506080610cbd88828901610bef565b9150509295509295909350565b6000610cd582610c04565b9150610ce083610c04565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1f57610d1e6109af565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5c57610d5b6109af565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9957610d986109af565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd657610dd56109af565b5b82820290509291505056fea26469706673582212208b2ea9a171c5aad150f40238a9a2ca2e2ac78c41bc65484efa7ee79b6ef8794864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}